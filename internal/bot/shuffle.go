package bot

import (
	"math/rand"
	"time"
)

// shuffleWords - принимает срез WordPair и возвращает его перемешанную копию.
// это гарантирует, что порядок слов в каждой сессии обучения будет случайным.
//
// ВАЖНО: функция создает новую копию среза, чтобы не изменять исходный порядок
// слов, хранящийся в b.UserWords
func shuffleWords(words []WordPair) []WordPair {
	// если срез пуст, нет смысла продолжать
	if len(words) == 0 {
		return words
	}

	// создаем новый срез того же размера, что и исходный
	shuffled := make([]WordPair, len(words))
	// копируем элементы из исходного среза в новый
	copy(shuffled, words)

	// Инициализируем генератор случайных чисел текущим временем,
	// чтобы обеспечить разную последовательность при каждом запуске.
	// В Go 1.20+ `rand.Shuffle` делает это автоматически, но явная инициализация
	// является хорошей практикой для более старых версий и для ясности.
	rand.New(rand.NewSource(time.Now().UnixNano()))
	// Используем стандартный алгоритм Фишера-Йейтса для перемешивания среза.
	rand.Shuffle(len(shuffled), func(i, j int) {
		shuffled[i], shuffled[j] = shuffled[j], shuffled[i]
	})

	// возвращаем перемешанный срез
	return shuffled
}
